<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.searchmetrics</groupId>
    <artifactId>n3-custom-job-config</artifactId>
    <packaging>jar</packaging>
    <version>1.0-co-4224-domain-config-api-SNAPSHOT</version>

    <name>${project.artifactId}</name>
    <description>The AuditJobConfiguration service generates audit job definitions for consumption by the AuditJobMgr service.</description>

    <properties>
        <skip.maven-site>false</skip.maven-site>
        <skip-deploy.maven-site>false</skip-deploy.maven-site>

        <!-- parent properties -->
        <issue-tracker.projectId>CO</issue-tracker.projectId>
        <!-- im jenkins angelegtes project id -->
        <ci.job-name>co-${project.artifactId}</ci.job-name>
        <scm.name>git-project-suite-content/word-to-vector.git</scm.name>

        <!-- START SNIPPET: Properties -->

        <!-- use this to group log messages in kibana based on the universe like
            SEP (Search Engine Parser) -->
        <application.universe>CO-AJC</application.universe>

        <!-- description for the debian package -->
        <debian.description>${project.description}</debian.description>
        <debian.package.name>sm-${project.artifactId}</debian.package.name>

        <!-- Java Service Wrapper properties -->
        <!-- Main class -->
        <wrapper.java.mainclass>com.searchmetrics.AuditJobConfiguration.StartStopManager</wrapper.java.mainclass>
        <wrapper.java.initmemory>2048</wrapper.java.initmemory>

        <!-- consul -->
        <configuration.storage>hetzner</configuration.storage>
        <configuration.version>1.0</configuration.version>

        <config.files>"application.yaml" "startup.conf"</config.files>

        <!-- Java max heap size, disabled by default in wrapper -->
        <wrapper.java.maxmemory>512</wrapper.java.maxmemory>
        <wrapper.logfile.maxsize>100</wrapper.logfile.maxsize>
        <!-- Max log files to keep -->
        <wrapper.logfile.maxfiles>10</wrapper.logfile.maxfiles>
        <wrapper.logfile.loglevel>INFO</wrapper.logfile.loglevel>
        <!-- END SNIPPET: Properties -->

        <!-- dependency version properties -->
        <base.image.version>0.9.18</base.image.version>
        <docker.image.name>dr.seometric.net:5000/${debian.package.name}</docker.image.name>
        <dropwizard.version>1.0.5</dropwizard.version>
        <dropwizard-swagger.version>1.0.6-1</dropwizard-swagger.version>
        <swagger-core.version>1.5.12</swagger-core.version>
        <jackson.version>2.7.4</jackson.version>
        <japi.version>0.34.0</japi.version>
        <jetty.version>9.4.2.v20170220</jetty.version>
        <spring.version>4.3.7.RELEASE</spring.version>
        <datastax.cassandra.version>3.1.2</datastax.cassandra.version>
        <org.springframework.data.version>1.5.1.RELEASE</org.springframework.data.version>
        <cassandraunit.version>3.1.3.2</cassandraunit.version>

        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <developers>
        <developer>
            <id>adamrobinson</id>
            <name>Adam Robinson</name>
            <email>a.robinson@searchmetrics.com</email>
        </developer>
        <developer>
            <id>tomaszkuchta</id>
            <name>Tomasz Kuchta</name>
            <email>t.kuchta@searchmetrics.com</email>
        </developer>
    </developers>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-servlet</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-continuation</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-http</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-io</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-util</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-server</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-servlets</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.containers</groupId>
                <artifactId>jersey-container-servlet</artifactId>
                <version>2.22.1</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>jdepend</groupId>
            <artifactId>jdepend</artifactId>
            <version>2.9.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-core</artifactId>
            <version>${dropwizard.version}</version>
        </dependency>

        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-testing</artifactId>
            <version>${dropwizard.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version><!--$NO-MVN-MAN-VER$-->
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version><!--$NO-MVN-MAN-VER$-->
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version><!--$NO-MVN-MAN-VER$-->
        </dependency>
        <!-- JERSEY SPRING -->

        <!-- https://mvnrepository.com/artifact/org.springframework/spring-context -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework/spring-web -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.vaadin/vaadin -->
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin</artifactId>
            <version>6.8.18</version>
        </dependency>

        <dependency>
            <groupId>com.datastax.cassandra</groupId>
            <artifactId>cassandra-driver-core</artifactId>
            <version>${datastax.cassandra.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-cassandra</artifactId>
            <version>${org.springframework.data.version}</version>
        </dependency>

        <dependency>
            <groupId>org.cassandraunit</groupId>
            <artifactId>cassandra-unit-spring</artifactId>
            <version>${cassandraunit.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.cassandraunit</groupId>
                    <artifactId>cassandra-unit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.cassandraunit</groupId>
            <artifactId>cassandra-unit-shaded</artifactId>
            <version>${cassandraunit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hectorclient</groupId>
            <artifactId>hector-core</artifactId>
            <version>2.0-0</version>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
            <version>2.22.1</version>
        </dependency>

        <!-- LOGSTASH APPENDER -->
        <!-- https://mvnrepository.com/artifact/biz.paluch.logging/logstash-gelf -->
        <dependency>
            <groupId>biz.paluch.logging</groupId>
            <artifactId>logstash-gelf</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>junit</artifactId>
                    <groupId>junit</groupId>
                </exclusion>
            </exclusions>
            <version>1.11.1</version>
        </dependency>

        <dependency>
            <groupId>com.ning</groupId>
            <artifactId>async-http-client</artifactId>
            <version>1.9.31</version>
            <exclusions>
                <exclusion>
                    <artifactId>slf4j-log4j12</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
                <exclusion>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-classic</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- TEST DEPENDENCIES -->
        <dependency>
            <groupId>com.mashape.unirest</groupId>
            <artifactId>unirest-java</artifactId>
            <version>1.4.7</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock</artifactId>
            <version>2.1.12</version>
        </dependency>

        <dependency>
            <groupId>org.mock-server</groupId>
            <artifactId>mockserver-netty</artifactId>
            <version>RELEASE</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>logback-classic</artifactId>
                    <groupId>ch.qos.logback</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--DATADOG METRICS-->
        <dependency>
            <groupId>org.coursera</groupId>
            <artifactId>dropwizard-metrics-datadog</artifactId>
            <version>1.1.6</version>
        </dependency>

        <dependency>
            <groupId>com.smoketurner</groupId>
            <artifactId>dropwizard-swagger</artifactId>
            <version>${dropwizard-swagger.version}</version>
        </dependency>
        <dependency>
            <groupId>com.googlecode.json-simple</groupId>
            <artifactId>json-simple</artifactId>
            <version>1.1</version>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>${basedir}/src/docker</directory>
                <filtering>true</filtering>
                <targetPath>${project.build.directory}</targetPath>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <version>1.3.0</version>
            </plugin>


            <plugin>
                <groupId>external.atlassian.jgitflow</groupId>
                <artifactId>jgitflow-maven-plugin</artifactId>
                <version>1.0-m5.1</version>
                <configuration>
                    <!-- see goals wiki page for configuration options -->
                </configuration>
            </plugin>

            <!-- The following plugin enables you to setup and start a docker container.
                This way you are able to setup a database, rabbitmq container or any other
                external dependency which is needed by your integration tests. @see https://registry.hub.docker.com/ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>build-docker-image</id>
                        <phase>install</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <exec executable="docker" failonerror="true" resolveexecutable="true">
                                    <arg line="build --pull=true --rm=true -t ${docker.image.name}:${project.version} ${project.build.directory}" />
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                </executions>
                <version>1.8</version>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>release</id>
            <activation>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>tagnpush-docker-image</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <exec executable="docker" failonerror="true" resolveexecutable="true">
                                            <arg line="push ${docker.image.name}:${project.version}" />
                                        </exec>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                        <version>1.8</version>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>disable_doclint_on_java8</id>
            <activation>
                <jdk>[1.8,)</jdk>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <configuration>
                            <additionalparam>-Xdoclint:none</additionalparam>
                        </configuration>
                        <version>2.10.4</version>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>IT</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                </plugins>
            </build>
        </profile>
    </profiles>


    <!--<distributionManagement>-->
        <!--<site>-->
            <!--<id>${repository.site.id}</id>-->
            <!--<name>${repository.site.name}</name>-->
            <!--<url>${repository.site.url}</url>-->
        <!--</site>-->
    <!--</distributionManagement>-->

    <!--<scm>-->
        <!--<connection>${scm.connection}</connection>-->
        <!--<developerConnection>${scm.connection}</developerConnection>-->
        <!--<url>${scm.url}</url>-->
    <!--</scm>-->

</project>
